//В моем коде есть работа как со статическими переменными, так и с динамическими

#define _CRT_SECURE_NO_WARNINGS
#include <locale.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <windows.h>
#include <conio.h>
#include "MusicLibrary.h"

// Главная функция

int main() {
    SetConsoleCP(1251);
    setlocale(LC_ALL, "rus");

    //Выделил память и инициализировал музыкальную библиотеку, вернул указатель из функции InitMusicLibrary() и присвоил ml
    MusicLibrary* ml = InitMusicLibrary();

    printf("Инициализация и заполнение плейлиста\n");

    //Инициализировал плейлист внутри музыкальной библиотеки вернул указатель на нее
    ml = InitPlaylist("Любимые треки", ml, 3, 2);

    //Массив треков для плейлиста
    Track tracks[3] = {
        {"Кукушка", "Виктор Цой", 400, 1986, "рок"},
        {"Метель", "Би-2", 345, 1998, "рок"},
        {"Лето в городе", "Иван Дорн", 328, 2012, "поп"}
    };

    //Заполнение плейлиста треками
    ml = SetPlaylistTrack(tracks, ml, 3);
    
    //Вывод треков из плейлиста
    OutputPlaylistTracks(ml);
    
    //Удаление трека из плейлиста
    ml = DeletePlaylistTrack(ml);
    OutputPlaylistTracks(ml);

    //Добавление нового трека в плейлист
    ml = AddPlaylistTrack(ml);
    OutputPlaylistTracks(ml);

    printf("Создание альбома и добавление в плейлист");

    //Массив альбомов для плейлиста
    Album albums[2] ={
        {"Метропол", "Би-2", 1999, 3,{

            {"Варвара", "Би-2", 423, 1999, "рок"},
            {"Метропол", "Би-2", 356, 1999, "рок"},
            {"Сердце", "Би-2", 510, 1999, "рок"}}},

        {"200 По Встречной", "Земфира", 2005, 3,{

            {"Ариведерчи", "Земфира", 431, 2005, "рок"},
            {"Бесконечность", "Земфира", 344, 2005, "рок"},
            {"Мачо", "Земфира", 315, 2005, "рок"}}}
    };

    //Аналогичный набор функций, как и для треков
    ml = SetPlaylistAlbum(albums,ml,2);
    OutputPlaylistAlbums(ml);

    ml = DeletePlaylistAlbum(ml);
    OutputPlaylistAlbums(ml);

    ml = AddPlaylistAlbum(ml);
    OutputPlaylistAlbums(ml);

    //Освобождение памяти для плейлиста
    ml = FreePlaylist(ml);

    //Массив альбомов для артиста
    Album albums_lsp[2] = {
        {"Magic City","ЛСП",2015,9,{

            {"Bullet", "ЛСП", 130, 2015, "рэп"},
            {"Что-то ещё", "ЛСП", 423, 2015, "рэп"},
            {"Шест", "ЛСП", 412, 2015, "рэп"},
            {"Безумие", "ЛСП", 258, 2015, "рэп"},
            {"Синее", "ЛСП", 258, 2015, "рэп"},
            {"Фокус", "ЛСП", 258, 2015, "рэп"},
            {"Бигги", "ЛСП", 258, 2015, "рэп"},
            {"ОК", "ЛСП", 258, 2015, "рэп"},
            {"Уровни", "ЛСП", 258, 2015, "рэп"}}},

        {"Tragic City","ЛСП",2017,10,{

            {"Воскресение", "ЛСП", 130, 2015, "рэп"},
            {"Монетка", "ЛСП", 423, 2015, "рэп"},
            {"Тело", "ЛСП", 412, 2015, "рэп"},
            {"Лабиринт отражений", "ЛСП", 258, 2015, "рэп"},
            {"Конец света", "ЛСП", 258, 2015, "рэп"},
            {"Белый танец", "ЛСП", 258, 2015, "рэп"},
            {"Ещё один день", "ЛСП", 258, 2015, "рэп"},
            {"Канкан", "ЛСП", 258, 2015, "рэп"},
            {"Ползать", "ЛСП", 258, 2015, "рэп"},
            {"Деньги не проблема", "ЛСП", 258, 2015, "рэп"}}}
    };

    //Аналогичный набор функций
    ml = InitArtist(ml, "ЛСП", 2, albums_lsp);
    OutputArtist(ml);

    ml = DeleteArtistAlbum(ml);
    OutputArtist(ml);

    //Освобождение памяти для артиста и музыкальной библиотеки
    FreeArtist(ml);
    FreeMusicLibrary(ml);
    return 0;
}